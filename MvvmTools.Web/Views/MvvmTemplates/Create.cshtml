@model MvvmTools.Web.Models.TemplateCreateViewModel

@{
    ViewBag.Title = "New Template";
}

<div class="pageheader">
    <h1>@ViewBag.Title</h1>
    <p class="description">Templates are <strong>disabled</strong> initially so you don't inadvertantly publish something that's incomplete.</p>
</div>

<section id="main-content">
    @using (Html.BeginForm("Create", "MvvmTemplates", FormMethod.Post, new { @class = "form-horizontal" }))
    {
        @Html.AntiForgeryToken()

        @Html.ValidationSummary(true, "", new {@class = "text-danger"})

        @*@Html.HiddenFor(model => model.Id);

            <div class="form-group">
                @Html.LabelFor(model => model.Enabled, htmlAttributes: new {@class = "control-label col-md-2"})
                <div class="col-md-10">
                    @Html.CheckBoxFor(model => model.Enabled, new {htmlAttributes = new {@class = "form-control"}})
                    @Html.ValidationMessageFor(model => model.Enabled, "", new {@class = "text-danger"})
                </div>
            </div>*@

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.Name, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Language, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Language, @Model.Languages, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.Language, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MvvmTemplateCategoryId, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.MvvmTemplateCategoryId, @Model.Categories, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.MvvmTemplateCategoryId, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Tags, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.Tags, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.Tags, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ViewModel, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.ViewModel, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.ViewModel, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.View, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.View, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.View, "", new {@class = "text-danger"})
            </div>
        </div>


        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Add" class="btn btn-default" style="margin-right: 5px;"/>
                <button class="btn" onclick="window.history.back();">Cancel</button>
            </div>
        </div>
        
    }
</section>
    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }
