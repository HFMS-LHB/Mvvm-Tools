<UserControl x:Class="MvvmTools.Core.Views.T4UserControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:Themes="clr-namespace:Xceed.Wpf.Toolkit.Themes;assembly=Xceed.Wpf.Toolkit"
             xmlns:avalonEdit="http://icsharpcode.net/sharpdevelop/avalonedit"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:viewModels="clr-namespace:MvvmTools.Core.ViewModels"
             xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
             x:Name="Root"
             d:DataContext="{d:DesignInstance {x:Type viewModels:T4UserControlViewModel}}"
             d:DesignHeight="300"
             d:DesignWidth="300"
             mc:Ignorable="d">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="../Styles/TextBoxEx.xaml" />
                <ResourceDictionary Source="../Converters/Converters.xaml" />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </UserControl.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition />
            <ColumnDefinition Width="Auto" />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <!--  Enabled  -->
            <RowDefinition Height="Auto" />
            <!--  Buffer  -->
            <RowDefinition Height="2*" />
            <!--  Splitter  -->
            <RowDefinition Height="Auto" />
            <!--  Preview or Error  -->
            <RowDefinition />
        </Grid.RowDefinitions>

        <!--  Toolbar  -->
        <xctk:DropDownButton x:Name="InsertFieldSplitButton"
                             Grid.Row="0"
                             Grid.Column="0"
                             Margin="0,2,0,5"
                             HorizontalAlignment="Left"
                             Content="_Insert Field"
                             Style="{DynamicResource DropDownButtonStyle1}">
            <xctk:DropDownButton.Resources>
                <Style x:Key="DropDownButtonStyle1" TargetType="{x:Type xctk:DropDownButton}">
                    <Setter Property="BorderThickness" Value="1" />
                    <Setter Property="IsTabStop" Value="False" />
                    <Setter Property="HorizontalContentAlignment" Value="Center" />
                    <Setter Property="VerticalContentAlignment" Value="Center" />
                    <Setter Property="Background" Value="{DynamicResource {ComponentResourceKey ResourceId=ButtonNormalBackgroundKey, TypeInTargetAssembly={x:Type Themes:ResourceKeys}}}" />
                    <Setter Property="BorderBrush" Value="{DynamicResource {ComponentResourceKey ResourceId=ButtonNormalOuterBorderKey, TypeInTargetAssembly={x:Type Themes:ResourceKeys}}}" />
                    <Setter Property="Padding" Value="3" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type xctk:DropDownButton}">
                                <Grid x:Name="MainGrid" SnapsToDevicePixels="True">
                                    <ToggleButton x:Name="PART_DropDownButton"
                                                  Grid.Column="1"
                                                  IsChecked="{Binding IsOpen,
                                                                      Mode=TwoWay,
                                                                      RelativeSource={RelativeSource TemplatedParent}}">
                                        <ToggleButton.IsHitTestVisible>
                                            <Binding Path="IsOpen" RelativeSource="{RelativeSource TemplatedParent}">
                                                <Binding.Converter>
                                                    <xctk:InverseBoolConverter />
                                                </Binding.Converter>
                                            </Binding>
                                        </ToggleButton.IsHitTestVisible>
                                        <ToggleButton.Template>
                                            <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                <ContentPresenter Content="{TemplateBinding Content}"
                                                                  ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                                                  ContentTemplate="{TemplateBinding ContentTemplate}" />
                                            </ControlTemplate>
                                        </ToggleButton.Template>
                                        <Grid>
                                            <xctk:ButtonChrome x:Name="ToggleButtonChrome"
                                                               Background="{TemplateBinding Background}"
                                                               BorderBrush="{TemplateBinding BorderBrush}"
                                                               BorderThickness="{TemplateBinding BorderThickness}"
                                                               Foreground="{TemplateBinding Foreground}"
                                                               RenderChecked="{TemplateBinding IsOpen}"
                                                               RenderEnabled="{TemplateBinding IsEnabled}"
                                                               RenderMouseOver="{Binding IsMouseOver,
                                                                                         ElementName=PART_DropDownButton}"
                                                               RenderPressed="{Binding IsPressed,
                                                                                       ElementName=PART_DropDownButton}">
                                                <Grid>
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="*" />
                                                        <ColumnDefinition Width="Auto" />
                                                    </Grid.ColumnDefinitions>
                                                    <ContentPresenter Margin="{TemplateBinding Padding}"
                                                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                                      Content="{TemplateBinding Content}"
                                                                      ContentTemplate="{TemplateBinding ContentTemplate}"
                                                                      RecognizesAccessKey="True" />
                                                    <Grid x:Name="arrowGlyph"
                                                          Grid.Column="1"
                                                          Margin="4,3"
                                                          IsHitTestVisible="False">
                                                        <Path x:Name="Arrow"
                                                              Width="7"
                                                              Height="4"
                                                              Data="M0,1C0,1 0,0 0,0 0,0 3,0 3,0 3,0 3,1 3,1 3,1 4,1 4,1 4,1 4,0 4,0 4,0 7,0 7,0 7,0 7,1 7,1 7,1 6,1 6,1 6,1 6,2 6,2 6,2 5,2 5,2 5,2 5,3 5,3 5,3 4,3 4,3 4,3 4,4 4,4 4,4 3,4 3,4 3,4 3,3 3,3 3,3 2,3 2,3 2,3 2,2 2,2 2,2 1,2 1,2 1,2 1,1 1,1 1,1 0,1 0,1z"
                                                              Fill="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
                                                    </Grid>
                                                </Grid>
                                            </xctk:ButtonChrome>
                                        </Grid>
                                    </ToggleButton>
                                    <Popup x:Name="PART_Popup"
                                           AllowsTransparency="True"
                                           Focusable="False"
                                           HorizontalOffset="1"
                                           IsOpen="{Binding IsChecked,
                                                            ElementName=PART_DropDownButton}"
                                           Placement="Bottom"
                                           StaysOpen="False"
                                           VerticalOffset="1">
                                        <Border BorderBrush="#A9ABADB3" BorderThickness="1">
                                            <Border.Background>
                                                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                                    <GradientStop Offset="0" Color="#A9F0F0F0" />
                                                    <GradientStop Offset="1" Color="#A9E5E5E5" />
                                                </LinearGradientBrush>
                                            </Border.Background>
                                            <ContentPresenter x:Name="PART_ContentPresenter" Content="{TemplateBinding DropDownContent}" />
                                        </Border>
                                    </Popup>
                                </Grid>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsEnabled" Value="False">
                                        <Setter TargetName="Arrow" Property="Fill" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                                        <Setter TargetName="ToggleButtonChrome" Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </xctk:DropDownButton.Resources>
            <xctk:DropDownButton.DropDownContent>
                <Grid>
                    <Grid.Resources>
                        <DataTemplate x:Key="FieldTemplate" DataType="viewModels:InsertFieldViewModel">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <!--  Insertion Button  -->
                                    <ColumnDefinition Width="80" />
                                    <!--  Field Name  -->
                                    <ColumnDefinition Width="120" />
                                    <!--  Field Description  -->
                                    <ColumnDefinition Width="200" />
                                    <!--  Field Current Value  -->
                                    <ColumnDefinition Width="150" />
                                </Grid.ColumnDefinitions>
                                <Border BorderBrush="LightGray" BorderThickness="0,0,1,1">
                                    <Button x:Name="InsertFieldButton"
                                            Margin="2,5,2,2"
                                            VerticalAlignment="Top"
                                            Click="InsertFieldButton_OnClick"
                                            Content="Insert Field" />
                                </Border>
                                <Border Grid.Column="1"
                                        BorderBrush="LightGray"
                                        BorderThickness="0,0,0,1">
                                    <TextBlock Margin="2,5,2,2"
                                               VerticalAlignment="Top"
                                               Text="{Binding Field.Name}"
                                               TextWrapping="Wrap" />
                                </Border>
                                <Border Grid.Column="2"
                                        BorderBrush="LightGray"
                                        BorderThickness="0,0,1,1">
                                    <TextBlock Margin="2,5,2,2"
                                               VerticalAlignment="Top"
                                               Text="{Binding Field.Description}"
                                               TextWrapping="Wrap" />
                                </Border>
                                <Border Grid.Column="3"
                                        BorderBrush="LightGray"
                                        BorderThickness="0,0,0,1">
                                    <TextBlock Margin="2,5,2,2"
                                               VerticalAlignment="Top"
                                               Text="{Binding Value}"
                                               TextWrapping="Wrap" />
                                </Border>
                            </Grid>
                        </DataTemplate>
                    </Grid.Resources>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <TextBlock Margin="0,5,0,0"
                               FontWeight="Bold"
                               Text="Predefined Fields" />
                    <ItemsControl Grid.Row="1"
                                  ItemTemplate="{StaticResource FieldTemplate}"
                                  ItemsSource="{Binding PredefinedFields}">
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <StackPanel />
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                    </ItemsControl>
                    <TextBlock Grid.Row="2"
                               Margin="0,5,0,0"
                               FontWeight="Bold"
                               Text="Predefined Fields" />
                    <ItemsControl Grid.Row="3"
                                  Margin="0,10,0,0"
                                  ItemTemplate="{StaticResource FieldTemplate}"
                                  ItemsSource="{Binding CustomFields}">
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <StackPanel />
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                    </ItemsControl>
                </Grid>
            </xctk:DropDownButton.DropDownContent>
        </xctk:DropDownButton>

        <!--  Row 0: Enabled Checkbox  -->
        <CheckBox Grid.Row="0"
                  Grid.Column="0"
                  Grid.ColumnSpan="2"
                  Margin="0,0,0,5"
                  HorizontalAlignment="Right"
                  Content="{Binding IsEnabledText}"
                  IsChecked="{Binding IsEnabled}"
                  Visibility="{Binding IsEnabledText,
                                       Converter={StaticResource NullToCollapsedConverter}}" />

        <!--  Row 1: Buffer  -->
        <avalonEdit:TextEditor x:Name="TextEditor"
                               Grid.Row="1"
                               Grid.Column="0"
                               Grid.ColumnSpan="2"
                               FontFamily="Consolas"
                               SyntaxHighlighting="C#"
                               VerticalScrollBarVisibility="Visible" />

        <!--  Row 2  -->
        <GridSplitter Grid.Row="2"
                      Grid.Column="0"
                      Grid.ColumnSpan="2"
                      Height="8"
                      HorizontalAlignment="Stretch"
                      VerticalAlignment="Stretch"
                      Background="DarkBlue" />

        <!--  Row 3: Preview or Error  -->
        <avalonEdit:TextEditor x:Name="PreviewTextEditor"
                               Grid.Row="3"
                               Grid.Column="0"
                               Grid.ColumnSpan="2"
                               FontFamily="Consolas"
                               IsReadOnly="True"
                               SyntaxHighlighting="C#"
                               VerticalScrollBarVisibility="Visible"
                               Visibility="{Binding ShowErrors,
                                                    Converter={StaticResource FalseToVisibleConverter}}" />
        <DataGrid x:Name="ErrorsDataGrid"
                  Grid.Row="3"
                  Grid.Column="0"
                  Grid.ColumnSpan="2"
                  AutoGenerateColumns="False"
                  CanUserAddRows="False"
                  CanUserDeleteRows="False"
                  CanUserReorderColumns="False"
                  CanUserResizeColumns="False"
                  CanUserResizeRows="False"
                  CanUserSortColumns="False"
                  CellStyle="{StaticResource NoFocusDataGridCell}"
                  GridLinesVisibility="None"
                  HeadersVisibility="None"
                  ItemsSource="{Binding Errors}"
                  SelectionUnit="FullRow"
                  Visibility="{Binding ShowErrors,
                                       Converter={StaticResource BoolToVisibilityConverter}}">
            <DataGrid.Columns>
                <DataGridTemplateColumn Width="*">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Grid>
                                <TextBlock MaxHeight="32"
                                           Padding="3,0"
                                           Text="{Binding}"
                                           TextWrapping="Wrap"
                                           ToolTip="{Binding}" />
                                <Border Height="1"
                                        VerticalAlignment="Bottom"
                                        Background="DarkGray" />
                            </Grid>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
            </DataGrid.Columns>
        </DataGrid>
    </Grid>
</UserControl>
