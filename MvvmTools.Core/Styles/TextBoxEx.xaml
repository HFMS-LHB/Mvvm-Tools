<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:controls="clr-namespace:MvvmTools.Core.Controls"
                    xmlns:themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero2">

    <Style TargetType="DataGrid">
        <Setter Property="CellStyle">
            <Setter.Value>
                <Style TargetType="DataGridCell">
                    <Setter Property="BorderThickness" Value="0" />
                    <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                </Style>
            </Setter.Value>
        </Setter>
    </Style>
    <!--  Override Highlighting so that its easy to see what is selected even when the control is not focused  -->
    <Style TargetType="{x:Type DataGridCell}">
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="true">
                <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" />
                <Setter Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
            </Trigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsSelected}" Value="True" />
                    <Condition Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=DataGrid}, Path=IsKeyboardFocusWithin}" Value="False" />
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" />
                    <Setter Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
        </Style.Triggers>
    </Style>

    <!--Apply this to all but the first cell in your DataGrid so that pressing <Tab> moves
        to next row, not next cell.-->
    <Style x:Key="NoFocusDataGridCell"
           BasedOn="{StaticResource {x:Type DataGridCell}}"
           TargetType="{x:Type DataGridCell}">
        <Setter Property="Focusable" Value="False" />
    </Style>

    <SolidColorBrush x:Key="TextBox.Static.Border" Color="#FFABAdB3" />
    <SolidColorBrush x:Key="TextBox.MouseOver.Border" Color="#FF7EB4EA" />
    <SolidColorBrush x:Key="TextBox.Focus.Border" Color="#FF569DE5" />

    <Style x:Key="SuggestionItemStyle" TargetType="ListBoxItem">
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBoxItem">
                    <Border x:Name="ContentBorder" Background="White">
                        <ContentPresenter />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="ContentBorder" Property="Background" Value="{x:Static SystemColors.HighlightBrush}" />
                            <Setter Property="IsSelected" Value="True" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="ContentBorder" Property="Background" Value="{x:Static SystemColors.HighlightBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type controls:TextBoxEx}">
        <Setter Property="Validation.ErrorTemplate">
            <Setter.Value>
                <ControlTemplate />
            </Setter.Value>
        </Setter>
        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" />
        <Setter Property="BorderBrush" Value="{StaticResource TextBox.Static.Border}" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="KeyboardNavigation.TabNavigation" Value="None" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="AllowDrop" Value="true" />
        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:TextBoxEx}">
                    <Grid x:Name="templateRoot">
                        <Popup x:Name="PART_Popup"
                               Width="{TemplateBinding ActualWidth}"
                               MinHeight="25"
                               MaxHeight="600"
                               AllowsTransparency="true"
                               Focusable="False"
                               HorizontalOffset="0"
                               Placement="Bottom"
                               PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}"
                               StaysOpen="False">
                            <themes:SystemDropShadowChrome x:Name="shadow"
                                                           MinWidth="{Binding ActualWidth,
                                                                              ElementName=templateRoot}"
                                                           MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                                           Color="Transparent">
                                <Border x:Name="dropDownBorder"
                                        Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"
                                        BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}"
                                        BorderThickness="1">
                                    <ScrollViewer x:Name="DropDownScrollViewer">
                                        <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                            <Canvas x:Name="canvas"
                                                    Width="0"
                                                    Height="0"
                                                    HorizontalAlignment="Left"
                                                    VerticalAlignment="Top">
                                                <Rectangle x:Name="opaqueRect"
                                                           Width="{Binding ActualWidth,
                                                                           ElementName=dropDownBorder}"
                                                           Height="{Binding ActualHeight,
                                                                            ElementName=dropDownBorder}"
                                                           Fill="{Binding Background,
                                                                          ElementName=dropDownBorder}" />
                                            </Canvas>
                                            <ListBox x:Name="PART_Selector"
                                                     BorderThickness="0"
                                                     DisplayMemberPath="{TemplateBinding DisplayMemberPath}"
                                                     Focusable="False"
                                                     ItemContainerStyle="{StaticResource ResourceKey=SuggestionItemStyle}"
                                                     ItemTemplate="{TemplateBinding ItemTemplate}"
                                                     ItemTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                                     KeyboardNavigation.DirectionalNavigation="Contained"
                                                     ScrollViewer.HorizontalScrollBarVisibility="Auto"
                                                     ScrollViewer.VerticalScrollBarVisibility="Auto"
                                                     SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                        </Grid>
                                    </ScrollViewer>
                                </Border>
                            </themes:SystemDropShadowChrome>
                        </Popup>
                        <Border x:Name="border"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="1"
                                SnapsToDevicePixels="True">
                            <Grid SnapsToDevicePixels="True">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition />
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <ScrollViewer x:Name="PART_ContentHost"
                                              Focusable="False"
                                              HorizontalScrollBarVisibility="Hidden"
                                              VerticalScrollBarVisibility="Hidden" />
                                <TextBlock x:Name="Watermark"
                                           Grid.Column="0"
                                           Margin="2,0,0,0"
                                           Focusable="False"
                                           Foreground="Gray"
                                           Text="{TemplateBinding Watermark}"
                                           Visibility="Collapsed" />
                                <Button x:Name="ClearButton"
                                        Grid.Column="1"
                                        BorderThickness="0"
                                        Focusable="False"
                                        Padding="2,0"
                                        SnapsToDevicePixels="False"
                                        Visibility="Collapsed">
                                    <TextBlock HorizontalAlignment="Center"
                                               VerticalAlignment="Center"
                                               FontFamily="Segoe UI Symbol"
                                               Text="&#xE21C;" />
                                </Button>
                                <Border x:Name="ErrorMessage"
                                        Grid.Column="2"
                                        Width="0"
                                        Background="DarkRed"
                                        Padding="3,0"
                                        SnapsToDevicePixels="False">
                                    <TextBlock VerticalAlignment="Center"
                                               FontWeight="Bold"
                                               Foreground="White"
                                               Text="{Binding RelativeSource={RelativeSource TemplatedParent},
                                                              Path=(Validation.Errors)[0].ErrorContent}" />
                                </Border>
                            </Grid>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger SourceName="PART_Popup" Property="HasDropShadow" Value="true">
                            <Setter TargetName="shadow" Property="Margin" Value="0,0,5,5" />
                            <Setter TargetName="shadow" Property="Color" Value="#71000000" />
                        </Trigger>
                        <Trigger Property="HasItems" Value="false">
                            <Setter TargetName="dropDownBorder" Property="Height" Value="95" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="border" Property="Opacity" Value="0.56" />
                        </Trigger>
                        <Trigger Property="Text" Value="">
                            <Setter TargetName="Watermark" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="Text" Value="{x:Null}">
                            <Setter TargetName="Watermark" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="ShowClearButton" Value="True">
                            <Setter TargetName="ClearButton" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="true" />
                                <Condition Property="ShowError" Value="false" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource TextBox.MouseOver.Border}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsKeyboardFocused" Value="true" />
                                <Condition Property="ShowError" Value="false" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource TextBox.Focus.Border}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="true" />
                                <Condition Property="ShowError" Value="true" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="ErrorMessage" Property="Border.Width" Value="NaN" />
                            <Setter TargetName="border" Property="BorderBrush" Value="DarkRed" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true" />
                    <Condition Property="IsSelectionActive" Value="false" />
                </MultiTrigger.Conditions>
                <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}" />
            </MultiTrigger>
            <Trigger Property="Validation.HasError" Value="true">
                <Setter Property="ShowError" Value="true" />
            </Trigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>